{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNFzljTEm2FzMTh/tC96pal"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sP9oX3foTiT9","executionInfo":{"status":"ok","timestamp":1720760549753,"user_tz":-345,"elapsed":24,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"18882ba1-8d85-449d-8f0b-6534e9af61a5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Python list: [1, 2, 3, 4]\n","Single dimensional array: [1 2 3 4 5 6]\n","Matrix:\n"]}],"source":["import numpy as np\n","list_x=[1,2,3,4] #python list\n","array = np.array([1, 2, 3, 4, 5, 6]) # single dimensional array\n","matrix = np.array([[1, 2, 3, 4],[5, 6, 7, 8], [9, 10, 11, 12]]) # nD array\n","print(\"Python list:\", list_x)\n","print(\"Single dimensional array:\", array)\n","print(\"Matrix:\")"]},{"cell_type":"markdown","source":[],"metadata":{"id":"f2NLs6Y_WK49"}},{"cell_type":"code","source":["import numpy as np\n","arr_zero = np.zeros(4)\n","arr_zero_matrix = np.zeros([3, 4])\n","arr_ones = np.ones(3)\n","arr_empty = np.empty(4)\n","arr_arange = np.arange(4)\n","arr_eye = np.eye(3)\n","arr_linspace = np.linspace(0, 20, num=5)\n","arr_rand1 = np.random.rand(4)\n","arr_rand2 = np.random.rand(2, 5)\n","arr_rand3 = np.random.randint(5, 20, 2)\n","print(\"arr_zero:\", arr_zero)\n","print(\"arr_zero_matrix:\", arr_zero_matrix)\n","print(\"arr_ones:\", arr_ones)\n","print(\"arr_empty:\", arr_empty)\n","print(\"arr_arange:\", arr_arange)\n","print(\"arr_eye:\", arr_eye)\n","print(\"arr_linspace:\", arr_linspace)\n","print(\"arr_rand1:\", arr_rand1)\n","print(\"arr_rand2:\", arr_rand2)\n","print(\"arr_rand3:\", arr_rand3)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jaARa03gUlEE","executionInfo":{"status":"ok","timestamp":1720761126755,"user_tz":-345,"elapsed":445,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"a23cb5e8-39f1-4fa0-e44b-234133a678f9"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["arr_zero: [0. 0. 0. 0.]\n","arr_zero_matrix: [[0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]]\n","arr_ones: [1. 1. 1.]\n","arr_empty: [5.05363089e-310 0.00000000e+000 0.00000000e+000 0.00000000e+000]\n","arr_arange: [0 1 2 3]\n","arr_eye: [[1. 0. 0.]\n"," [0. 1. 0.]\n"," [0. 0. 1.]]\n","arr_linspace: [ 0.  5. 10. 15. 20.]\n","arr_rand1: [0.78905832 0.6504868  0.38779985 0.02646825]\n","arr_rand2: [[0.30360028 0.93742029 0.38919362 0.08470318 0.26300155]\n"," [0.28749502 0.44178576 0.11989841 0.14632239 0.31457726]]\n","arr_rand3: [13 12]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","l = []\n","for i in range(1, 5):\n","    int_1 = int(input(\"Enter :\"))\n","    l.append(int_1)\n","print(np.array([l]))\n","\n","# Task 2\n","print(np.ndim(l))\n","print(np.shape(l))\n","\n","# b. Create an array with ndmin=6\n","print(np.array([1, 2, 3], ndmin=6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tE0bX_pyW7HH","executionInfo":{"status":"ok","timestamp":1720761348799,"user_tz":-345,"elapsed":15534,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"8cb0e13c-8fd7-48b5-9998-146dd4d45601"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter :89\n","Enter :34\n","Enter :23\n","Enter :43\n","[[89 34 23 43]]\n","1\n","(4,)\n","[[[[[[1 2 3]]]]]]\n"]}]},{"cell_type":"code","source":["#addition and subtraction\n","arr1 = np.array([[12,34],[44,22]])\n","arr2 = np.array([[1,34],[0,22]])\n","arr3 = np.add(arr1,arr2)\n","arr4 = np.subtract(arr1,arr2)\n","print(arr3)\n","print(arr4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZxBUjMGAXyHt","executionInfo":{"status":"ok","timestamp":1720761429606,"user_tz":-345,"elapsed":418,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"d5c7a316-3db9-4f40-e2de-6dda4750cf5b"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[13 68]\n"," [44 44]]\n","[[11  0]\n"," [44  0]]\n"]}]},{"cell_type":"code","source":["arr1 = np.array([[1,2,3],[2,3,4],[2,3,4]])\n","arr2 = np.array([[21,4],[2,1],[2,3]])\n","arr3 = np.dot(arr1, arr2)\n","arr4 = np.matmul(arr1, arr2)\n","print(arr3)\n","print(arr4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aBNysKIlX8EJ","executionInfo":{"status":"ok","timestamp":1720761454064,"user_tz":-345,"elapsed":602,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"1dbbcf6d-edb7-4c1d-c076-8ff4a4e9be8d"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[[31 15]\n"," [56 23]\n"," [56 23]]\n","[[31 15]\n"," [56 23]\n"," [56 23]]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","x = np.linspace(0, 5, 20)\n","y = np.linspace(0, 10, 20)\n","plt.plot(x, y, 'purple') # line\n","plt.xlabel(\"X-axis\")\n","plt.ylabel(\"Y-axis\")\n","plt.title(\"Demo graph\")\n","plt.plot(x, y, 'o')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"8o_od2K1YNAa","executionInfo":{"status":"ok","timestamp":1720761511101,"user_tz":-345,"elapsed":922,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"8323834b-648a-4c2b-d9cf-0c1f88f08c24"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7c70e82f46a0>]"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\"\"\" Problem 2: Create 2-dimensional position vectors and plot them. \"\"\"\n","origin = np.array([0,0])\n","V = np.array([1,1])\n","W = np.array([-2.0,-1])\n","fig, ax = plt.subplots()\n","ax.quiver(origin[0], origin[1], V[0], V[1], angles='xy', scale_units='xy', scale=1, color='r')\n","ax.quiver(origin[0], origin[1], W[0], W[1], angles='xy', scale_units='xy', scale=1, color='b')\n","ax.text(origin[0]-0.1, origin[1]+0.1, \"O\")\n","ax.text(V[0], V[1], \"v\")\n","ax.text(W[0]-0.125, W[1]-0.1, \"w\")\n","ax.set_xlim([-3, 3])\n","ax.set_ylim([-3, 3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"aqEpjHYCknHu","executionInfo":{"status":"ok","timestamp":1720764777835,"user_tz":-345,"elapsed":485,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"85b3bc0e-656c-43ad-9aaf-72826201e534"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-3.0, 3.0)"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import math\n","\n","def calculate_magnitude(vector):\n","    x, y, z = vector\n","    magnitude = math.sqrt(x**2 + y**2 + z**2)\n","    return magnitude\n","U = (1.5, 1.5, 2.0)\n","magnitude_U = calculate_magnitude(U)\n","print(\"The magnitude of the vector U is:\", magnitude_U)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ggWN5m-YZSdG","executionInfo":{"status":"ok","timestamp":1720761835375,"user_tz":-345,"elapsed":454,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"47f549a4-8039-441a-d35b-750e8f426ac9"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["The magnitude of the vector U is: 2.9154759474226504\n"]}]},{"cell_type":"code","source":["import math\n","\n","def calculate_magnitude(vector):\n","    x, y, z = vector\n","    magnitude = math.sqrt(x**2 + y**2 + z**2)\n","    return magnitude\n","\n","def calculate_direction_cosines(vector):\n","    x, y, z = vector\n","    magnitude = calculate_magnitude(vector)\n","    cos_alpha = x / magnitude\n","    cos_beta = y / magnitude\n","    cos_gamma = z / magnitude\n","    return cos_alpha, cos_beta, cos_gamma\n","O = (1.5, 1.5, 2.0)\n","direction_cosines = calculate_direction_cosines(O)\n","print(\"The direction cosines of the vector O are:\", direction_cosines)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FD6kn2y9ZTQX","executionInfo":{"status":"ok","timestamp":1720761838745,"user_tz":-345,"elapsed":467,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"9e680bea-5bbe-4bfa-a69b-227207526aae"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["The direction cosines of the vector O are: (0.5144957554275265, 0.5144957554275265, 0.6859943405700353)\n"]}]},{"cell_type":"code","source":["def calculate_dot_product(vector_a, vector_b):\n","    a1, a2, a3 = vector_a\n","    b1, b2, b3 = vector_b\n","    dot_product = a1 * b1 + a2 * b2 + a3 * b3\n","    return dot_product\n","a = (1.5, 1.5, 2.0)\n","b = (-1.5, 0.5, 2.0)\n","dot_product = calculate_dot_product(a, b)\n","print(\"The dot product of vectors a and b is:\", dot_product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3sWnu6mLZWfS","executionInfo":{"status":"ok","timestamp":1720761863733,"user_tz":-345,"elapsed":466,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"09bfbaea-68b0-4d59-a710-1a7f21e76532"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["The dot product of vectors a and b is: 2.5\n"]}]},{"cell_type":"code","source":["def calculate_cross_product(vector_a, vector_b):\n","    a1, a2, a3 = vector_a\n","    b1, b2, b3 = vector_b\n","    cross_product = (\n","        a2 * b3 - a3 * b2,\n","        a3 * b1 - a1 * b3,\n","        a1 * b2 - a2 * b1\n","    )\n","    return cross_product\n","a = (1.5, 1.5, 2.0)\n","b = (-1.5, 0.5, 2.0)\n","cross_product = calculate_cross_product(a, b)\n","print(\"The cross product of vectors a and b is:\", cross_product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tOCoNuDIZZvp","executionInfo":{"status":"ok","timestamp":1720761868305,"user_tz":-345,"elapsed":418,"user":{"displayName":"Natasha Shrestha","userId":"06813840258123433874"}},"outputId":"095c2e35-9633-4035-f40a-bd4bddc61fa2"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["The cross product of vectors a and b is: (2.0, -6.0, 3.0)\n"]}]}]}